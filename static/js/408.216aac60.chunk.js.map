{"version":3,"file":"static/js/408.216aac60.chunk.js","mappings":"wKACA,EAAuB,yBAAvB,EAAyD,2BAAzD,EAA0F,wB,SCc1F,EAZmB,SAACA,GAClB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CACNC,GAAI,UAAYH,EAAMI,GACtBC,UAAW,SAACC,GAAO,OAAMA,EAAQC,SAAWC,EAAWA,CAAM,EAAEC,SAAA,EAE/DC,EAAAA,EAAAA,KAAA,OAAKC,IAAKX,EAAMY,IAAKP,UAAWG,IAC/BR,EAAMa,OAGb,ECZA,GAAgB,KAAO,4BAA4B,OAAS,+BCU5D,EATsB,SAACb,GACrB,OACEC,EAAAA,EAAAA,MAAA,MAAII,UAAWG,EAAAA,KAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKX,EAAMY,OAChBF,EAAAA,EAAAA,KAAA,QAAML,UAAWG,EAAAA,KAAOC,SAAET,EAAMc,SAGtC,ECRA,EAAuB,8BCUvB,EATsB,SAACd,GACrB,OACEC,EAAAA,EAAAA,MAAA,MAAII,UAAWG,EAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,QAAAD,SAAOT,EAAMc,QACbJ,EAAAA,EAAAA,KAAA,OAAKC,IAAI,0JAGf,ECRA,EAA2B,8BCqB3B,EAjBoB,SAACX,GACnB,IAAIe,EAAcf,EAAMgB,MAAMC,cAAcC,KAAI,SAACC,GAAI,OACnDT,EAAAA,EAAAA,KAACU,EAAa,CAACR,IAAKO,EAAKP,IAAmBE,KAAMK,EAAKL,MAApBK,EAAKf,GAAuB,IAG7DiB,EAAgBrB,EAAMgB,MAAMM,UAAUJ,KAAI,SAACC,GAAI,OACjDT,EAAAA,EAAAA,KAACa,EAAe,CAAeT,KAAMK,EAAKL,MAApBK,EAAKf,GAAuB,IAGpD,OACEH,EAAAA,EAAAA,MAAA,MAAII,UAAWG,EAAWC,SAAA,CACvBM,EACAM,IAGP,ECnBA,EAAwB,uBAAxB,EAAyD,yBCAzD,EAA0K,yBAA1K,EAAyM,yB,uCCuBzM,GAJyBG,EAAAA,EAAAA,GAAU,CACjCC,KAAM,eADiBD,EAdL,SAACxB,GACnB,OACEC,EAAAA,EAAAA,MAAA,QAAMI,UAAWG,EAAOkB,SAAU1B,EAAM2B,aAAalB,SAAA,EACnDC,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJC,UAAWC,EAAAA,GACXjB,KAAK,OACLkB,SAAU,CAACC,EAAAA,GAAUC,EAAAA,EAAAA,GAAiB,KACtCC,YAAY,yBAEdxB,EAAAA,EAAAA,KAAA,UAAQL,UAAWG,EAAMC,SAAC,aAGhC,ICaA,EAzBgB,SAACT,GACf,IAAImC,EAAanC,EAAMoC,WAAWlB,KAAI,SAACmB,GAAM,OAC3C3B,EAAAA,EAAAA,KAAC4B,EAAU,CACT1B,IAAKyB,EAAOzB,IACZC,KAAMwB,EAAOxB,KAEbT,GAAIiC,EAAOjC,IADNiC,EAAOjC,GAEZ,IAOJ,OACEH,EAAAA,EAAAA,MAAA,OAAKI,UAAWG,EAAQC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKL,UAAWG,EAAUC,SAAE0B,KAC5BlC,EAAAA,EAAAA,MAAA,OAAAQ,SAAA,EACEC,EAAAA,EAAAA,KAAC6B,EAAW,CAACvB,MAAOhB,EAAMgB,SAC1BN,EAAAA,EAAAA,KAAC8B,EAAgB,CAACd,SATD,SAACe,GACpBzC,EAAM0C,WAAWD,EAAOE,KAC1B,SAWJ,E,8BCLA,GAAeC,E,QAAAA,KACbC,EAAAA,EAAAA,KAjBoB,SAAC7B,GACrB,MAAO,CACL8B,eAAgB9B,EAAM+B,QAAQC,YAAYF,eAC1CV,WAAYpB,EAAM+B,QAAQX,WAC1BpB,MAAOA,EAAM+B,QAAQC,YAEzB,IAEyB,SAACC,GACxB,MAAO,CACLP,WAAY,SAACC,GACXM,GAASP,EAAAA,EAAAA,GAAWC,GACtB,EAEJ,IAIEO,EAAAA,EAFF,CAGEC,E","sources":["webpack://my-app/./src/Components/dialogs/DialogItem/DialogItem.module.css?a5d2","Components/dialogs/DialogItem/DialogItem.js","webpack://my-app/./src/Components/dialogs/DialogBlock/DialogMesage/DialogMessage.module.css?0e38","Components/dialogs/DialogBlock/DialogMesage/DialogMessage.js","webpack://my-app/./src/Components/dialogs/DialogBlock/MyDialogMesage/MyDialogMessage.module.css?5b37","Components/dialogs/DialogBlock/MyDialogMesage/MyDialogMessage.js","webpack://my-app/./src/Components/dialogs/DialogBlock/DialogBlock.module.css?bc64","Components/dialogs/DialogBlock/DialogBlock.js","webpack://my-app/./src/Components/dialogs/Dialogs.module.css?c0eb","webpack://my-app/./src/Components/dialogs/MessageForm/MessageForm.module.css?542a","Components/dialogs/MessageForm/MessageForm.js","Components/dialogs/Dialogs.js","Components/dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DialogItem_item__vvAnw\",\"active\":\"DialogItem_active__MXR2h\",\"img\":\"DialogItem_img__+V+Ol\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./DialogItem.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <NavLink\r\n      to={\"dialog/\" + props.id}\r\n      className={(navData) => (navData.isActive ? s.active : s.item)}\r\n    >\r\n      <img src={props.img} className={s.img} />\r\n      {props.name}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DialogMessage_item__3d7oz\",\"active\":\"DialogMessage_active__JqCQM\"};","import s from \"./DialogMessage.module.css\";\r\n\r\nconst DialogMessage = (props) => {\r\n  return (\r\n    <li className={s.item}>\r\n      <img src={props.img} />\r\n      <span className={s.text}>{props.text}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DialogMessage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MyDialogMessage_item__C03Ma\",\"active\":\"MyDialogMessage_active__35zWg\"};","import s from \"./MyDialogMessage.module.css\";\r\n\r\nconst DialogMessage = (props) => {\r\n  return (\r\n    <li className={s.item}>\r\n      <span>{props.text}</span>\r\n      <img src=\"https://static.fotor.com/app/minitools/aiimage/img/aiimage/scenes/a%20realistic%20fox%20in%20the%20lake%20generated%20by%20ai%20image%20creator.png\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DialogMessage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"DialogBlock_messages__PQn1-\"};","import React from \"react\";\r\nimport DialogMessage from \"./DialogMesage/DialogMessage\";\r\nimport MyDialogMessage from \"./MyDialogMesage/MyDialogMessage\";\r\nimport s from \"./DialogBlock.module.css\";\r\n\r\nconst DialogBlock = (props) => {\r\n  let messegeElem = props.state.messageFriend.map((mail) => (\r\n    <DialogMessage img={mail.img} key={mail.id} text={mail.text} />\r\n  ));\r\n\r\n  let messegeMyElem = props.state.messageMe.map((mail) => (\r\n    <MyDialogMessage key={mail.id} text={mail.text} />\r\n  ));\r\n\r\n  return (\r\n    <ul className={s.messages}>\r\n      {messegeElem}\r\n      {messegeMyElem}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default DialogBlock;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"Dialogs_block__ovJuX\",\"dialogs\":\"Dialogs_dialogs__xLFNb\",\"messages\":\"Dialogs_messages__WRlGE\",\"text\":\"Dialogs_text__FkAPc\",\"btn\":\"Dialogs_btn__Uk3dm\",\"new\":\"Dialogs_new__Xc5P3\"};","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"MessageForm_block__cnI7Y\",\"dialogs\":\"MessageForm_dialogs__0eF14\",\"messages\":\"MessageForm_messages__Jo+31\",\"text\":\"MessageForm_text__YgIdZ\",\"btn\":\"MessageForm_btn__U2y7z\",\"new\":\"MessageForm_new__kvLW1\"};","import React from \"react\";\r\nimport s from \"./MessageForm.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControl/Input\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\n\r\nconst MessageForm = (props) => {\r\n  return (\r\n    <form className={s.new} onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"body\"\r\n        validate={[required, maxLengthCreator(10)]}\r\n        placeholder=\"Enter ur message...\"\r\n      />\r\n      <button className={s.btn}>Swoosh</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst MessageRedaxForm = reduxForm({\r\n  form: \"messageBody\",\r\n})(MessageForm);\r\n\r\nexport default MessageRedaxForm;\r\n","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport DialogBlock from \"./DialogBlock/DialogBlock\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport MessageRedaxForm from \"./MessageForm/MessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogElem = props.dialogData.map((dialog) => (\r\n    <DialogItem\r\n      img={dialog.img}\r\n      name={dialog.name}\r\n      key={dialog.id}\r\n      id={dialog.id}\r\n    />\r\n  ));\r\n\r\n    let addNewMessage  = (values) => {\r\n      props.addMessage(values.body)\r\n    }\r\n\r\n  return (\r\n    <div className={s.block}>\r\n      <div className={s.dialogs}>{dialogElem}</div>\r\n      <div>\r\n        <DialogBlock state={props.state} />\r\n        <MessageRedaxForm onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import Dialogs from \"./Dialogs\";\r\nimport {\r\n  addMessage,\r\n} from \"../../redux/dialogsReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newMessageText: state.dialogs.messageData.newMessageText,\r\n    dialogData: state.dialogs.dialogData,\r\n    state: state.dialogs.messageData,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (body) => {\r\n      dispatch(addMessage(body));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"names":["props","_jsxs","NavLink","to","id","className","navData","isActive","s","children","_jsx","src","img","name","text","messegeElem","state","messageFriend","map","mail","DialogMessage","messegeMyElem","messageMe","MyDialogMessage","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","maxLengthCreator","placeholder","dialogElem","dialogData","dialog","DialogItem","DialogBlock","MessageRedaxForm","values","addMessage","body","compose","connect","newMessageText","dialogs","messageData","dispatch","withAuthRedirect","Dialogs"],"sourceRoot":""}